#pragma once

// --------------------------------------------------------------------------------------
// LED STRIP: Party 55
// --------------------------------------------------------------------------------------
#if defined(PARTY_55_STRIPS)
#define NeoFeature NeoRgbFeature
#define NeoColor RgbColor
#define NeoMethod NeoEsp32I2s1X8800KbpsMethod

#define LED_COUNT 300 // the number of addressed WS2812B leds on the strip (the strip is 300 LEDs)
#define SEGMENTS 12 // the number of "individual" segments on the strip
#define STRIPS 2 // the number of strips

#define OVERSAMPLING 3
#define OVERSAMPLING_BUFFER_SIZE (OVERSAMPLING * LED_COUNT)

static WS2812FX_power_model_t power_model = {
    .i_red = 10,
    .i_green = 10,
    .i_blue = 10,
    .i_white = 0,
    .i_supply_max = 8000
};

static WS2812FX_info_t pixel_info[STRIPS] = {
// STRIP #0
#define LED_USABLE_0 256 // the number of useable WS2812B leds on the strip (the strip is 300 LEDs)
    { .pixel_type = PIXEL_RGB,
        .pixel_pin = GPIO_NUM_18,
        .total_pixel_count = LED_COUNT,
        .usable_pixel_count = LED_USABLE_0,
        .segments = SEGMENTS,
        // everywhere where you see a + 0 there is a pixel on the corner that might still work as part of the segment, but for now, they are black
        .segment_pixel_counts = (uint16_t[SEGMENTS]) { 34 + 0, 19 + 0, 27, 14, 27, 7, 34 + 0, 27 + 0, 27, 6, 27, 7 },
        .segment_offsets = (uint16_t[SEGMENTS]) { 0, 35, 55, 82, 96, 123, 130, 165, 193, 220, 226, 253 },
        .segment_directions = (ws2812_segment_direction_t[SEGMENTS]) { SD_LEFT, SD_DOWN, SD_RIGHT, SD_DOWN, SD_LEFT, SD_DOWN, SD_RIGHT, SD_UP, SD_LEFT, SD_UP, SD_RIGHT, SD_UP },
        .pixel_x = (int16_t[LED_USABLE_0]) { 262, 246, 229, 212, 195, 178, 162, 145, 128, 111, 95, 78, 61, 44, 28, 11, -6, -23, -39, -56, -73, -90, -107, -123, -140, -157, -174, -190, -207, -224, -241, -257, -274, -291, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -293, -280, -267, -254, -241, -228, -215, -202, -189, -177, -164, -151, -138, -125, -112, -99, -86, -73, -60, -47, -34, -21, -9, 4, 17, 30, 43, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 43, 30, 17, 4, -9, -21, -34, -47, -60, -73, -86, -99, -112, -125, -138, -151, -164, -177, -189, -202, -215, -228, -241, -254, -267, -280, -293, -299, -299, -299, -299, -299, -299, -299, -291, -274, -257, -241, -224, -207, -190, -174, -157, -140, -123, -107, -90, -73, -56, -39, -23, -6, 11, 28, 44, 61, 78, 95, 111, 128, 145, 162, 178, 195, 212, 229, 246, 262, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 262, 246, 230, 213, 197, 180, 164, 148, 131, 115, 98, 82, 66, 49, 33, 16, 0, -17, -33, -49, -66, -82, -99, -115, -131, -148, -164, -189, -189, -189, -189, -189, -189, -180, -163, -146, -129, -112, -95, -78, -61, -44, -27, -10, 7, 24, 41, 58, 75, 92, 109, 126, 143, 160, 177, 194, 211, 228, 245, 262, 271, 271, 271, 271, 271, 271, 271 },
        .pixel_y = (int16_t[LED_USABLE_0]) { 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 346, 329, 311, 294, 276, 259, 241, 224, 207, 189, 172, 154, 137, 119, 102, 84, 67, 50, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, -2, -19, -36, -53, -71, -88, -105, -122, -139, -156, -173, -190, -207, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -224, -239, -255, -271, -287, -302, -318, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -318, -301, -284, -267, -249, -232, -215, -198, -181, -164, -147, -130, -113, -96, -79, -62, -45, -28, -11, 6, 23, 40, 57, 74, 91, 108, 125, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 143, 161, 180, 198, 217, 235, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 252, 268, 284, 300, 315, 331, 347 },
        .pixel_r = (uint16_t[LED_USABLE_0]) { 441, 432, 422, 413, 405, 397, 390, 383, 377, 372, 367, 363, 360, 358, 356, 355, 355, 356, 357, 359, 362, 366, 371, 376, 382, 388, 395, 403, 411, 420, 429, 438, 448, 459, 457, 445, 431, 419, 407, 396, 384, 374, 364, 354, 345, 336, 329, 322, 316, 311, 306, 303, 301, 294, 281, 268, 255, 242, 229, 216, 203, 190, 178, 166, 153, 140, 127, 114, 102, 89, 77, 64, 52, 41, 31, 25, 23, 29, 38, 49, 52, 50, 53, 62, 73, 87, 101, 116, 132, 148, 164, 180, 196, 213, 220, 218, 217, 216, 216, 217, 219, 221, 224, 228, 232, 238, 243, 250, 256, 264, 271, 279, 287, 296, 305, 314, 324, 333, 343, 354, 364, 374, 383, 393, 404, 414, 425, 436, 437, 426, 415, 405, 396, 386, 377, 370, 362, 355, 348, 343, 338, 334, 331, 328, 327, 326, 326, 327, 329, 332, 335, 340, 344, 350, 357, 364, 371, 380, 389, 398, 408, 418, 418, 405, 393, 380, 368, 357, 346, 336, 326, 317, 308, 301, 294, 288, 282, 278, 275, 272, 271, 271, 272, 274, 277, 281, 286, 292, 298, 294, 280, 266, 252, 238, 224, 212, 200, 187, 177, 166, 157, 149, 143, 138, 135, 134, 135, 138, 143, 149, 157, 167, 177, 187, 200, 212, 237, 248, 261, 274, 288, 302, 303, 293, 284, 276, 268, 262, 256, 252, 248, 245, 244, 244, 245, 247, 251, 255, 261, 267, 275, 283, 292, 301, 312, 323, 334, 346, 358, 370, 381, 393, 404, 416, 428, 440 },
        .pixel_a = (uint16_t[LED_USABLE_0]) { 306, 305, 303, 301, 299, 297, 295, 292, 290, 287, 285, 282, 280, 277, 275, 272, 269, 266, 264, 261, 258, 256, 253, 251, 248, 246, 244, 242, 240, 238, 236, 234, 232, 231, 229, 228, 226, 225, 223, 221, 219, 217, 215, 212, 210, 207, 205, 202, 199, 196, 193, 189, 186, 184, 185, 185, 185, 185, 186, 186, 186, 187, 187, 188, 189, 189, 190, 192, 193, 195, 197, 201, 206, 214, 228, 249, 280, 306, 323, 332, 343, 2, 21, 36, 47, 55, 60, 65, 68, 70, 72, 74, 75, 76, 79, 82, 85, 89, 92, 96, 99, 102, 106, 109, 112, 115, 117, 120, 123, 125, 127, 129, 131, 133, 135, 137, 138, 140, 141, 142, 144, 143, 141, 140, 138, 136, 135, 133, 132, 130, 128, 126, 124, 122, 120, 118, 116, 113, 111, 108, 105, 103, 100, 97, 94, 91, 88, 85, 82, 79, 77, 74, 71, 69, 66, 64, 61, 59, 57, 55, 53, 51, 50, 48, 46, 45, 43, 41, 38, 36, 34, 31, 28, 26, 23, 20, 16, 13, 9, 6, 2, 359, 355, 352, 348, 345, 341, 338, 335, 333, 331, 330, 328, 326, 323, 321, 318, 314, 311, 306, 301, 296, 290, 284, 277, 270, 263, 256, 250, 244, 239, 234, 229, 226, 222, 219, 217, 220, 224, 226, 229, 231, 234, 236, 239, 242, 245, 249, 252, 256, 260, 264, 268, 272, 276, 280, 283, 287, 291, 294, 297, 300, 303, 306, 308, 311, 313, 315, 317, 317, 315, 314, 312, 311, 309, 308 },
        .MAX_X = 299,
        .MAX_Y = 355,
        .MAX_R = 459,
        .BAND_WIDTH = 10,
        .power_model = &power_model },
// STRIP #1
#define LED_USABLE_1 257 // the number of useable WS2812B leds on the strip (the strip is 300 LEDs)
    { .pixel_type = PIXEL_RGB,
        .pixel_pin = GPIO_NUM_19,
        .total_pixel_count = LED_COUNT,
        .usable_pixel_count = LED_USABLE_1,
        .segments = SEGMENTS,
        // everywhere where you see a + 0 there is a pixel on the corner that might still work as part of the segment, but for now, they are black
        .segment_pixel_counts = (uint16_t[SEGMENTS]) { 20, 28, 14, 27, 7, 34, 28 + 0, 27, 6, 27 + 0, 6, 33 + 0 },
        .segment_offsets = (uint16_t[SEGMENTS]) { 0, 20, 48, 62, 89, 96, 130, 159, 186, 192, 220, 226 + 1 },
        .segment_directions = (ws2812_segment_direction_t[SEGMENTS]) { SD_DOWN, SD_RIGHT, SD_DOWN, SD_LEFT, SD_DOWN, SD_RIGHT, SD_UP, SD_LEFT, SD_UP, SD_RIGHT, SD_UP, SD_LEFT },
        .pixel_x = (int16_t[LED_USABLE_1]) { -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -299, -293, -281, -268, -256, -243, -231, -218, -206, -193, -181, -168, -156, -144, -131, -119, -106, -94, -81, -69, -56, -44, -31, -19, -6, 6, 19, 31, 43, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 43, 30, 17, 4, -9, -21, -34, -47, -60, -73, -86, -99, -112, -125, -138, -151, -164, -177, -189, -202, -215, -228, -241, -254, -267, -280, -293, -299, -299, -299, -299, -299, -299, -299, -291, -274, -257, -241, -224, -207, -190, -174, -157, -140, -123, -107, -90, -73, -56, -39, -23, -6, 11, 28, 44, 61, 78, 95, 111, 128, 145, 162, 178, 195, 212, 229, 246, 262, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 262, 246, 230, 213, 197, 180, 164, 148, 131, 115, 98, 82, 66, 49, 33, 16, 0, -17, -33, -49, -66, -82, -99, -115, -131, -148, -164, -189, -189, -189, -189, -189, -189, -180, -163, -146, -129, -112, -95, -78, -61, -44, -27, -10, 7, 24, 41, 58, 75, 92, 109, 126, 143, 160, 177, 194, 211, 228, 245, 262, 271, 271, 271, 271, 271, 271, 263, 246, 230, 214, 197, 181, 165, 149, 132, 116, 100, 83, 67, 51, 35, 18, 2, -14, -31, -47, -63, -79, -96, -112, -128, -145, -161, -177, -193, -210, -226, -242, -259 },
        .pixel_y = (int16_t[LED_USABLE_1]) { 347, 330, 313, 297, 280, 264, 247, 231, 214, 197, 181, 164, 148, 131, 114, 98, 81, 65, 48, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 15, -2, -19, -36, -53, -71, -88, -105, -122, -139, -156, -173, -190, -207, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -216, -224, -239, -255, -271, -287, -302, -318, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -326, -318, -302, -285, -269, -252, -236, -219, -203, -187, -170, -154, -137, -121, -104, -88, -72, -55, -39, -22, -6, 11, 27, 43, 60, 76, 93, 109, 126, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 143, 161, 180, 198, 217, 235, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 254, 272, 290, 309, 327, 346, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355, 355 },
        .pixel_r = (uint16_t[LED_USABLE_1]) { 458, 445, 433, 421, 410, 399, 388, 378, 368, 358, 350, 341, 334, 326, 320, 315, 310, 306, 303, 301, 294, 282, 269, 257, 244, 232, 219, 207, 194, 182, 170, 158, 146, 133, 121, 108, 97, 84, 73, 61, 50, 39, 30, 24, 24, 30, 39, 49, 52, 50, 53, 62, 73, 87, 101, 116, 132, 148, 164, 180, 196, 213, 220, 218, 217, 216, 216, 217, 219, 221, 224, 228, 232, 238, 243, 250, 256, 264, 271, 279, 287, 296, 305, 314, 324, 333, 343, 354, 364, 374, 383, 393, 404, 414, 425, 436, 437, 426, 415, 405, 396, 386, 377, 370, 362, 355, 348, 343, 338, 334, 331, 328, 327, 326, 326, 327, 329, 332, 335, 340, 344, 350, 357, 364, 371, 380, 389, 398, 408, 418, 418, 406, 393, 382, 370, 359, 348, 339, 329, 320, 312, 304, 297, 290, 285, 280, 277, 274, 272, 271, 271, 272, 274, 278, 281, 287, 292, 299, 294, 280, 266, 252, 238, 224, 212, 200, 187, 177, 166, 157, 149, 143, 138, 135, 134, 135, 138, 143, 149, 157, 167, 177, 187, 200, 212, 237, 248, 261, 274, 288, 302, 303, 293, 284, 276, 268, 262, 256, 252, 248, 245, 244, 244, 245, 247, 251, 255, 261, 267, 275, 283, 292, 301, 312, 323, 334, 346, 358, 371, 384, 397, 411, 425, 439, 442, 432, 423, 415, 406, 398, 391, 385, 379, 373, 369, 365, 361, 359, 357, 355, 355, 355, 356, 358, 361, 364, 368, 372, 377, 383, 390, 397, 404, 412, 421, 430, 439 },
        .pixel_a = (uint16_t[LED_USABLE_1]) { 229, 228, 226, 225, 223, 221, 220, 218, 216, 213, 211, 209, 206, 204, 201, 198, 195, 192, 189, 186, 184, 185, 185, 185, 185, 186, 186, 186, 187, 187, 188, 188, 189, 190, 191, 192, 194, 196, 198, 202, 208, 217, 230, 255, 285, 310, 323, 332, 343, 2, 21, 36, 47, 55, 60, 65, 68, 70, 72, 74, 75, 76, 79, 82, 85, 89, 92, 96, 99, 102, 106, 109, 112, 115, 117, 120, 123, 125, 127, 129, 131, 133, 135, 137, 138, 140, 141, 142, 144, 143, 141, 140, 138, 136, 135, 133, 132, 130, 128, 126, 124, 122, 120, 118, 116, 113, 111, 108, 105, 103, 100, 97, 94, 91, 88, 85, 82, 79, 77, 74, 71, 69, 66, 64, 61, 59, 57, 55, 53, 51, 50, 48, 46, 45, 43, 41, 39, 37, 35, 32, 30, 27, 24, 21, 18, 15, 11, 8, 5, 1, 358, 354, 351, 348, 344, 341, 338, 335, 333, 331, 330, 328, 326, 323, 321, 318, 314, 311, 306, 301, 296, 290, 284, 277, 270, 263, 256, 250, 244, 239, 234, 229, 226, 222, 219, 217, 220, 224, 226, 229, 231, 234, 236, 239, 242, 245, 249, 252, 256, 260, 264, 268, 272, 276, 280, 283, 287, 291, 294, 297, 300, 303, 306, 308, 311, 313, 315, 317, 317, 315, 313, 311, 310, 308, 307, 305, 303, 301, 299, 297, 295, 293, 290, 288, 286, 283, 281, 278, 276, 273, 270, 268, 265, 262, 260, 257, 255, 252, 250, 248, 246, 243, 241, 239, 238, 236, 234 },
        .MAX_X = 299,
        .MAX_Y = 355,
        .MAX_R = 442,
        .BAND_WIDTH = 10,
        .power_model = &power_model }
};
#endif